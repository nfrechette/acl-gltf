dist: trusty
sudo: required

language: cpp

matrix:
  include:
    # Linux gcc5
    - os: linux
      env: COMPILER=gcc5 TOOLCHAIN=gcc PACKAGES="g++-5 g++-5-multilib g++-multilib"

    # Linux gcc6
    - os: linux
      env: COMPILER=gcc6 TOOLCHAIN=gcc PACKAGES="g++-6 g++-6-multilib g++-multilib"

    # Linux gcc7
    - os: linux
      env: COMPILER=gcc7 TOOLCHAIN=gcc PACKAGES="g++-7 g++-7-multilib g++-multilib"

    # Linux gcc8
    - os: linux
      env: COMPILER=gcc8 TOOLCHAIN=gcc PACKAGES="g++-8 g++-8-multilib g++-multilib"

    # Linux clang4
    - os: linux
      env: COMPILER=clang4 TOOLCHAIN=clang PACKAGES="clang-4.0 libstdc++-5-dev libc6-dev-i386 g++-5-multilib g++-multilib"

    # Linux clang5
    - os: linux
      env: COMPILER=clang5 TOOLCHAIN=clang SONARCLOUD=1 PACKAGES="clang-5.0 libstdc++-5-dev libc6-dev-i386 g++-5-multilib g++-multilib"
      addons:
        sonarcloud:
          organization: "nfrechette-github"

    # Linux clang6
    - os: linux
      env: COMPILER=clang6 TOOLCHAIN=clang PACKAGES="clang-6.0 libstdc++-5-dev libc6-dev-i386 g++-5-multilib g++-multilib"

    # OS X xcode8
    - os: osx
      osx_image: xcode8.3
      env: COMPILER=osx TOOLCHAIN=xcode

    # OS X xcode9
    - os: osx
      osx_image: xcode9.4
      env: COMPILER=osx TOOLCHAIN=xcode

    # OS X xcode10
    - os: osx
      osx_image: xcode10.1
      env: COMPILER=osx TOOLCHAIN=xcode

before_install:
    - if [[ "$TOOLCHAIN" == "clang" ]]; then curl -sSL "http://apt.llvm.org/llvm-snapshot.gpg.key" | sudo -E apt-key add - ; fi
    - if [[ "$COMPILER" == "clang4" ]]; then echo "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main" | sudo tee -a /etc/apt/sources.list > /dev/null ; fi
    - if [[ "$COMPILER" == "clang5" ]]; then echo "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main" | sudo tee -a /etc/apt/sources.list > /dev/null ; fi
    - if [[ "$COMPILER" == "clang6" ]]; then echo "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main" | sudo tee -a /etc/apt/sources.list > /dev/null ; fi
    - 'if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test";
      sudo -E apt-get -yq update;
      sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install ${PACKAGES};
      fi'
    - 'if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update || true;
      brew upgrade python || true;
      fi'

script:
    - python3 make.py -clean -build -compiler ${COMPILER} -config Debug -cpu x86
    - python3 make.py -clean -build -compiler ${COMPILER} -config Release -cpu x86
    - python3 make.py -clean -build -compiler ${COMPILER} -config Debug -cpu x64
    - python3 make.py -clean -build -compiler ${COMPILER} -config Release -cpu x64
    - python3 make.py -clean -build -compiler ${COMPILER} -config Release -cpu x64 -nosimd
